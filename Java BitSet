import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read size of BitSets and number of operations
        int n = scanner.nextInt(); // Size of BitSets
        int m = scanner.nextInt(); // Number of operations
        
        // Initialize two BitSets
        BitSet b1 = new BitSet(n);
        BitSet b2 = new BitSet(n);
        
        // Process operations
        for (int i = 0; i < m; i++) {
            String operation = scanner.next(); // Operation type
            int op1 = scanner.nextInt(); // First operand (BitSet number)
            int op2 = scanner.nextInt(); // Second operand or index
            
            switch (operation) {
                case "AND":
                    if (op1 == 1) b1.and(b2);
                    else b2.and(b1);
                    break;
                case "OR":
                    if (op1 == 1) b1.or(b2);
                    else b2.or(b1);
                    break;
                case "XOR":
                    if (op1 == 1) b1.xor(b2);
                    else b2.xor(b1);
                    break;
                case "FLIP":
                    if (op1 == 1) b1.flip(op2);
                    else b2.flip(op2);
                    break;
                case "SET":
                    if (op1 == 1) b1.set(op2);
                    else b2.set(op2);
                    break;
            }
            
            // Output the number of set bits in both BitSets
            System.out.println(b1.cardinality() + " " + b2.cardinality());
        }
    }
}
